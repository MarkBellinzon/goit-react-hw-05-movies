{"version":3,"file":"static/js/755.5771e997.chunk.js","mappings":"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","sources":["components/FilmsList/FilmsList.module.jsx","components/FilmsList/FilmsList.jsx","helpers/getMovies.js","components/Form/Form.module.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ListFilms = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ItemFilms = styled.li`\n  list-style: none;\n  padding: 20px;\n  /* margin: 0; */\n`;\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n  color: #cf4b4b;\n  :hover {\n    color: #1d66c5;\n    text-shadow: 1px 1px 2px #0e2a50;\n  }\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n  transition: all 0.5s ease-in;\n\n  :hover {\n    scale: 1.05;\n    transition: all 0.5s ease-in;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { AiOutlineFileImage } from 'react-icons/ai';\nimport { ListFilms, ItemFilms, Links, Card ,Img} from './FilmsList.module';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ListFilms>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <ItemFilms key={id}>\n              <Links to={`/movies/${id}`} state={{ from: location }}>\n                <Card>\n                  {poster_path ? (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                      alt={title}\n                    />\n                  ) : (\n                    <AiOutlineFileImage size={200} />\n                  )}\n                  {title}\n                </Card>\n              </Links>\n            </ItemFilms>\n          );\n        })}\n      </ListFilms>\n      <Outlet />\n    </>\n  );\n};\n\n\nexport default MoviesList;","import axios from 'axios';\n\nexport const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3bc5ea567716597088a9f8a065113fe0';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n\n  return data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const getCastMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.cast;\n};\nexport const getReviewsMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data.results;\n};\n","import styled from '@emotion/styled';\n\nexport const InputSearch = styled.input`\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n\n  padding: 15px 16px;\n\n  color: rgba(149, 227, 233, 0.2);\n\n  background: #2b2b2b;\n  border-radius: 10px;\n\n  :active,\n  :focus,\n  :hover {\n    color: #1d66c5;\n  }\n`;\n\nexport const ButtonSearch = styled.button`\nfont - weit: 500;\nfont - size: 18px;\nline-heght: 27px;\n\nmargin-left: 12px;\npadding: 15px 16px;\ncolor: rgba(149, 227, 233, 0.2);\n\n background: #2b2b2b;\n  border-radius: 10px;\n  cursor: pointer;\n\n  :not(:disabled):active,\n  :focus,\n  :not(:disabled):hover {\n    color: #1d66c5;\n\n`;\n","import { useState } from 'react';\nimport { InputSearch, ButtonSearch } from './Form.module';\n\nconst Form = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchParams({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputSearch\n        type=\"text\"\n        placeholder=\"Name movie\"\n        autoFocus\n        value={query}\n        onChange={handleSearchParams}\n      />\n      <ButtonSearch type=\"submit\" disabled={!query}>\n        Search\n      </ButtonSearch>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'helpers/getMovies';\nimport Form from 'components/Form/Form';\nimport FilmsList from 'components/FilmsList/FilmsList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const currentQuery = searchParams.get('query');\n    if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n      try {\n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchMovieByQuery();\n  }, [searchParams]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {movies.length > 0 && <FilmsList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["ListFilms","styled","_templateObject","_taggedTemplateLiteral","ItemFilms","_templateObject2","Links","Link","_templateObject3","Card","_templateObject4","Img","_templateObject5","_ref","movies","location","useLocation","_jsxs","_Fragment","children","_jsx","map","_ref2","id","title","poster_path","to","concat","state","from","src","alt","AiOutlineFileImage","size","Outlet","BASE_POSTER_URL","PLACEHOLDER","axios","API_KEY","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","_x","getMovieById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getCastMovie","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","InputSearch","ButtonSearch","setSearchParams","_useState","useState","_useState2","_slicedToArray","setQuery","onSubmit","e","preventDefault","type","placeholder","autoFocus","value","onChange","target","disabled","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","useEffect","currentQuery","get","fetchMovieByQuery","movieByQuery","t0","console","log","Form","length","FilmsList"],"sourceRoot":""}